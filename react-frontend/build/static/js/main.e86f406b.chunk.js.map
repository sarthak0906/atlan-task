{"version":3,"sources":["Hello.js","index.js"],"names":["name","App","props","React","useState","file","setFile","timer","setTimer","top","setTop","setFileOut","uint8View","setuint8View","pause","setPause","Math","random","inputKey","setinputKey","reader","FileReader","useEffect","console","log","readAsArrayBuffer","onload","result","Uint8Array","interval","setInterval","a","up","min","length","axios","post","start","subarray","then","r","catch","e","alert","clearInterval","Hello","type","onChange","event","target","files","key","onClick","get","render","document","getElementById"],"mappings":"0NAEe,kBAAGA,EAAH,EAAGA,KAAH,OAAc,qCAAWA,EAAX,M,wBCIvBC,EAAM,SAACC,GAAW,IAAD,EACGC,IAAMC,SAAS,MADlB,mBACdC,EADc,KACRC,EADQ,OAEKH,IAAMC,SAAS,GAFpB,mBAEdG,EAFc,KAEPC,EAFO,OAGCL,IAAMC,SAAS,GAHhB,mBAGdK,EAHc,KAGTC,EAHS,OAISP,IAAMC,SAAS,GAJxB,mBAILO,GAJK,aAKaR,IAAMC,SAAS,GAL5B,mBAKdQ,EALc,KAKHC,EALG,OAMKV,IAAMC,UAAS,GANpB,mBAMdU,EANc,KAMPC,EANO,OAOWZ,IAAMC,SAASY,KAAKC,UAP/B,mBAOdC,EAPc,KAOJC,EAPI,KAQjBC,EAAS,IAAIC,WAEjBlB,IAAMmB,WAAU,WACdC,QAAQC,IAAInB,GACNA,IACJe,EAAOK,kBAAkBpB,GACzBe,EAAOM,OAAS,WACLN,EAAOO,OAChBhB,EAAWS,EAAOO,QAClBd,EAAa,IAAIe,WAAWR,EAAOO,aAGtC,CAACtB,IAGJF,IAAMmB,WAAU,WACd,IAAMO,EAAWC,YAAW,sBAAE,4BAAAC,EAAA,sDAC5BvB,EAASD,EAAQ,GACbyB,GAAM,EACF3B,IACN2B,EAAKhB,KAAKiB,IAAIxB,EAAI,IAAKG,EAAUsB,SAEnCX,QAAQC,IAAIQ,GACRvB,EAAMuB,IAAOlB,GACfqB,IAAMC,KAAK,aAAc,CACvBpC,KAAMK,EAAKL,KACXqC,MAAQ5B,EACRJ,KAAMO,EAAU0B,SAAS7B,EAAKuB,KAE/BO,MAAK,SAAAC,GACJjB,QAAQC,IAAIgB,GACZ9B,EAAOsB,MAERS,OAAM,SAAAC,GAAC,OAAInB,QAAQC,IAAIkB,MACxBnB,QAAQC,IAAI,CACVxB,KAAMK,EAAKL,KACXqC,MAAQ5B,EACRJ,KAAOO,EAAU0B,SAAS7B,EAAKuB,MAG1BvB,GAAOuB,IACdW,MAAM,wBACNrC,EAAQ,MACRI,EAAO,GACPC,EAAW,MACXE,EAAa,MACbM,EAAYH,KAAKC,WA9BS,2CAgC3B,KACH,OAAO,kBAAM2B,cAAcf,MAC1B,CAACpB,EAAKF,EAAOF,IA6BhB,OAJAF,IAAMmB,WAAU,WACdC,QAAQC,IAAIV,KACX,CAACA,IAGF,6BACE,kBAAC+B,EAAD,CAAO7C,KAAM,UACb,gEAGA,2BAAO8C,KAAK,OAAOC,SAjCJ,SAACC,GAClB1C,EAAQ0C,EAAMC,OAAOC,MAAM,KAgCgBC,IAAKjC,IAEzCb,EAAQ,6BACT,4BAAQL,KAAK,QAASoD,QAhCX,WACjBrC,GAAUD,KA+BJ,IAA+CA,EAAS,SAAW,QAAnE,KACA,4BAAQsC,QA7BK,WACnBjB,IAAMkB,IAAI,WAAahD,EAAKL,MAC3BuC,MAAK,WACJI,MAAM,wBACNrC,EAAQ,MACRI,EAAO,GACPC,EAAW,MACXE,EAAa,MACbM,EAAYH,KAAKC,aAElBwB,OAAM,SAACC,GACNnB,QAAQC,IAAIkB,QAkBR,aACO,KAMjBY,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e86f406b.chunk.js","sourcesContent":["import React from 'react';\n\nexport default ({ name }) => <h1>Hello {name}!</h1>;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport './style.css';\nimport axios from 'axios';\n\nconst App = (props) => {\n  const [file, setFile] = React.useState(null);\n  const [timer, setTimer] = React.useState(0);\n  const [top, setTop] = React.useState(0);\n  const [fileOut, setFileOut] = React.useState(0);\n  const [uint8View, setuint8View] = React.useState(0);\n  const [pause, setPause] = React.useState(false);\n  const [inputKey, setinputKey] = React.useState(Math.random());\n  let reader = new FileReader();\n\n  React.useEffect(() => {\n    console.log(file);\n    if (!!file){\n      reader.readAsArrayBuffer(file);\n      reader.onload = function() {\n        let a1 = reader.result;\n        setFileOut(reader.result);\n        setuint8View(new Uint8Array(reader.result));\n      }\n    }\n  }, [file]);\n\n\n  React.useEffect(() => {\n    const interval = setInterval( async () => {\n      setTimer(timer + 1);\n      let up = -1;\n      if (!!!!file){\n        up = Math.min(top+900, uint8View.length);\n      }\n      console.log(up);\n      if (top < up && !pause){\n        axios.post('/pauseable', {\n          name: file.name,\n          start : top,\n          file: uint8View.subarray(top, up),\n        })\n        .then(r => {\n          console.log(r);\n          setTop(up);\n        })\n        .catch(e => console.log(e));\n        console.log({\n          name: file.name,\n          start : top,\n          file: (uint8View.subarray(top, up)),\n        });\n      }\n      else if (top == up){\n        alert(\"file upload complete\");\n        setFile(null);\n        setTop(0);\n        setFileOut(null);\n        setuint8View(null);\n        setinputKey(Math.random())\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [top, timer, file]);\n\n  const fileChange = (event) => {\n    setFile(event.target.files[0])\n  }\n\n  const PauseClick = () => {\n    setPause(!pause);\n  }\n\n  const CancelUpload = () => {\n    axios.get('/cancel/' + file.name)\n    .then(() => {\n      alert(\"file upload canceled\");\n      setFile(null);\n      setTop(0);\n      setFileOut(null);\n      setuint8View(null);\n      setinputKey(Math.random())\n    })\n    .catch((e) => {\n      console.log(e)\n    })\n  }\n\n  React.useEffect(() => {\n    console.log(pause);\n  }, [pause]);\n\n  return (\n    <div>\n      <Hello name={\"Atlan\"} />\n      <p>\n        Select a file to see the magic ;)\n      </p>\n      <input type=\"file\" onChange={fileChange} key={inputKey} />\n      {\n        (!!file) ? <div>\n          <button name=\"pause\"  onClick={PauseClick} > {(pause) ? \"Resume\" : \"Pause\"} </button>\n          <button onClick={CancelUpload}> Cancel </button>\n        </div> : \"\"\n      }\n    </div>\n  );\n}\n\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}